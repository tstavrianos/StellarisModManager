//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/usefull/Newfolder/git/StellarisModManager/Stellaris.Data/Grammar\Paradox.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Stellaris.Data.Antlr {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="ParadoxParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
public interface IParadoxVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="ParadoxParser.config"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConfig([NotNull] ParadoxParser.ConfigContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ParadoxParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment([NotNull] ParadoxParser.AssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ParadoxParser.field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitField([NotNull] ParadoxParser.FieldContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ParadoxParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValue([NotNull] ParadoxParser.ValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ParadoxParser.symbol"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSymbol([NotNull] ParadoxParser.SymbolContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ParadoxParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitString([NotNull] ParadoxParser.StringContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ParadoxParser.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInteger([NotNull] ParadoxParser.IntegerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ParadoxParser.real"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReal([NotNull] ParadoxParser.RealContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ParadoxParser.date"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDate([NotNull] ParadoxParser.DateContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ParadoxParser.percent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPercent([NotNull] ParadoxParser.PercentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ParadoxParser.map"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMap([NotNull] ParadoxParser.MapContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ParadoxParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArray([NotNull] ParadoxParser.ArrayContext context);
}
} // namespace Stellaris.Data.Antlr4
