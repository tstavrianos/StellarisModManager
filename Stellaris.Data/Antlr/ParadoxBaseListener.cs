//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/usefull/Newfolder/git/StellarisModManager/Stellaris.Data/Grammar\Paradox.g4 by ANTLR 4.8

// Unreachable code detected

using Antlr4.Runtime.Misc;

#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Stellaris.Data.Antlr {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IParadoxListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
public partial class ParadoxBaseListener : IParadoxListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParadoxParser.config"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConfig([NotNull] ParadoxParser.ConfigContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParadoxParser.config"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConfig([NotNull] ParadoxParser.ConfigContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParadoxParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] ParadoxParser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParadoxParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] ParadoxParser.AssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParadoxParser.field"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterField([NotNull] ParadoxParser.FieldContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParadoxParser.field"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitField([NotNull] ParadoxParser.FieldContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParadoxParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValue([NotNull] ParadoxParser.ValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParadoxParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValue([NotNull] ParadoxParser.ValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParadoxParser.symbol"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSymbol([NotNull] ParadoxParser.SymbolContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParadoxParser.symbol"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSymbol([NotNull] ParadoxParser.SymbolContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParadoxParser.string"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterString([NotNull] ParadoxParser.StringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParadoxParser.string"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitString([NotNull] ParadoxParser.StringContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParadoxParser.integer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInteger([NotNull] ParadoxParser.IntegerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParadoxParser.integer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInteger([NotNull] ParadoxParser.IntegerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParadoxParser.real"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReal([NotNull] ParadoxParser.RealContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParadoxParser.real"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReal([NotNull] ParadoxParser.RealContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParadoxParser.date"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDate([NotNull] ParadoxParser.DateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParadoxParser.date"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDate([NotNull] ParadoxParser.DateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParadoxParser.percent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPercent([NotNull] ParadoxParser.PercentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParadoxParser.percent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPercent([NotNull] ParadoxParser.PercentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParadoxParser.map"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMap([NotNull] ParadoxParser.MapContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParadoxParser.map"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMap([NotNull] ParadoxParser.MapContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParadoxParser.array"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArray([NotNull] ParadoxParser.ArrayContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParadoxParser.array"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArray([NotNull] ParadoxParser.ArrayContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace Stellaris.Data.Antlr4
