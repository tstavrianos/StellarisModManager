//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/usefull/Newfolder/git/StellarisModManager/Stellaris.Data/Grammar\Paradox.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Stellaris.Data.Antlr {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
public partial class ParadoxLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		OPERATOR=1, BLOCK_START=2, BLOCK_END=3, INT=4, PCT=5, REAL=6, DATE=7, 
		STRING=8, SYMBOL=9, WHITESPACE=10, LINE_COMMENT=11;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"OPERATOR", "BLOCK_START", "BLOCK_END", "INT", "PCT", "REAL", "DATE", 
		"STRING", "SYMBOL", "WHITESPACE", "LINE_COMMENT", "STRING_DELIM", "NEGATION"
	};


	public ParadoxLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public ParadoxLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, "'{'", "'}'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "OPERATOR", "BLOCK_START", "BLOCK_END", "INT", "PCT", "REAL", "DATE", 
		"STRING", "SYMBOL", "WHITESPACE", "LINE_COMMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Paradox.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static ParadoxLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\r', '\x82', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x5', '\x2', '&', '\n', 
		'\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x5', '\x5', '\x5', '-', '\n', '\x5', '\x3', '\x5', '\x6', '\x5', '\x30', 
		'\n', '\x5', '\r', '\x5', '\xE', '\x5', '\x31', '\x3', '\x6', '\x5', '\x6', 
		'\x35', '\n', '\x6', '\x3', '\x6', '\x6', '\x6', '\x38', '\n', '\x6', 
		'\r', '\x6', '\xE', '\x6', '\x39', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\a', '\x5', '\a', '?', '\n', '\a', '\x3', '\a', '\x6', '\a', '\x42', 
		'\n', '\a', '\r', '\a', '\xE', '\a', '\x43', '\x3', '\a', '\x3', '\a', 
		'\x6', '\a', 'H', '\n', '\a', '\r', '\a', '\xE', '\a', 'I', '\x3', '\b', 
		'\x6', '\b', 'M', '\n', '\b', '\r', '\b', '\xE', '\b', 'N', '\x3', '\b', 
		'\x3', '\b', '\x6', '\b', 'S', '\n', '\b', '\r', '\b', '\xE', '\b', 'T', 
		'\x3', '\b', '\x3', '\b', '\x6', '\b', 'Y', '\n', '\b', '\r', '\b', '\xE', 
		'\b', 'Z', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\a', '\t', 
		'\x61', '\n', '\t', '\f', '\t', '\xE', '\t', '\x64', '\v', '\t', '\x3', 
		'\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\a', '\n', 'j', '\n', '\n', 
		'\f', '\n', '\xE', '\n', 'm', '\v', '\n', '\x3', '\v', '\x6', '\v', 'p', 
		'\n', '\v', '\r', '\v', '\xE', '\v', 'q', '\x3', '\v', '\x3', '\v', '\x3', 
		'\f', '\x3', '\f', '\a', '\f', 'x', '\n', '\f', '\f', '\f', '\xE', '\f', 
		'{', '\v', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', 
		'\xE', '\x3', '\xE', '\x2', '\x2', '\xF', '\x3', '\x3', '\x5', '\x4', 
		'\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', '\t', '\x11', 
		'\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', '\x2', '\x1B', 
		'\x2', '\x3', '\x2', '\t', '\x4', '\x2', '>', '>', '@', '@', '\x3', '\x2', 
		'\x32', ';', '\x4', '\x2', '$', '$', '^', '^', '\x5', '\x2', '\x32', ';', 
		'\x43', '\\', '\x63', '|', '\b', '\x2', '\'', '\'', '/', '\x30', '\x32', 
		'<', '\x42', '\\', '\x61', '\x61', '\x63', '|', '\x5', '\x2', '\v', '\f', 
		'\xF', '\xF', '\"', '\"', '\x4', '\x2', '\f', '\f', '\xF', '\xF', '\x2', 
		'\x92', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\x5', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', 
		'\x3', '\x2', '\x2', '\x2', '\x3', '%', '\x3', '\x2', '\x2', '\x2', '\x5', 
		'\'', '\x3', '\x2', '\x2', '\x2', '\a', ')', '\x3', '\x2', '\x2', '\x2', 
		'\t', ',', '\x3', '\x2', '\x2', '\x2', '\v', '\x34', '\x3', '\x2', '\x2', 
		'\x2', '\r', '>', '\x3', '\x2', '\x2', '\x2', '\xF', 'L', '\x3', '\x2', 
		'\x2', '\x2', '\x11', '\\', '\x3', '\x2', '\x2', '\x2', '\x13', 'g', '\x3', 
		'\x2', '\x2', '\x2', '\x15', 'o', '\x3', '\x2', '\x2', '\x2', '\x17', 
		'u', '\x3', '\x2', '\x2', '\x2', '\x19', '~', '\x3', '\x2', '\x2', '\x2', 
		'\x1B', '\x80', '\x3', '\x2', '\x2', '\x2', '\x1D', '&', '\a', '?', '\x2', 
		'\x2', '\x1E', '\x1F', '\a', '>', '\x2', '\x2', '\x1F', '&', '\a', '@', 
		'\x2', '\x2', ' ', '&', '\t', '\x2', '\x2', '\x2', '!', '\"', '\a', '>', 
		'\x2', '\x2', '\"', '&', '\a', '?', '\x2', '\x2', '#', '$', '\a', '@', 
		'\x2', '\x2', '$', '&', '\a', '?', '\x2', '\x2', '%', '\x1D', '\x3', '\x2', 
		'\x2', '\x2', '%', '\x1E', '\x3', '\x2', '\x2', '\x2', '%', ' ', '\x3', 
		'\x2', '\x2', '\x2', '%', '!', '\x3', '\x2', '\x2', '\x2', '%', '#', '\x3', 
		'\x2', '\x2', '\x2', '&', '\x4', '\x3', '\x2', '\x2', '\x2', '\'', '(', 
		'\a', '}', '\x2', '\x2', '(', '\x6', '\x3', '\x2', '\x2', '\x2', ')', 
		'*', '\a', '\x7F', '\x2', '\x2', '*', '\b', '\x3', '\x2', '\x2', '\x2', 
		'+', '-', '\x5', '\x1B', '\xE', '\x2', ',', '+', '\x3', '\x2', '\x2', 
		'\x2', ',', '-', '\x3', '\x2', '\x2', '\x2', '-', '/', '\x3', '\x2', '\x2', 
		'\x2', '.', '\x30', '\t', '\x3', '\x2', '\x2', '/', '.', '\x3', '\x2', 
		'\x2', '\x2', '\x30', '\x31', '\x3', '\x2', '\x2', '\x2', '\x31', '/', 
		'\x3', '\x2', '\x2', '\x2', '\x31', '\x32', '\x3', '\x2', '\x2', '\x2', 
		'\x32', '\n', '\x3', '\x2', '\x2', '\x2', '\x33', '\x35', '\x5', '\x1B', 
		'\xE', '\x2', '\x34', '\x33', '\x3', '\x2', '\x2', '\x2', '\x34', '\x35', 
		'\x3', '\x2', '\x2', '\x2', '\x35', '\x37', '\x3', '\x2', '\x2', '\x2', 
		'\x36', '\x38', '\t', '\x3', '\x2', '\x2', '\x37', '\x36', '\x3', '\x2', 
		'\x2', '\x2', '\x38', '\x39', '\x3', '\x2', '\x2', '\x2', '\x39', '\x37', 
		'\x3', '\x2', '\x2', '\x2', '\x39', ':', '\x3', '\x2', '\x2', '\x2', ':', 
		';', '\x3', '\x2', '\x2', '\x2', ';', '<', '\a', '\'', '\x2', '\x2', '<', 
		'\f', '\x3', '\x2', '\x2', '\x2', '=', '?', '\x5', '\x1B', '\xE', '\x2', 
		'>', '=', '\x3', '\x2', '\x2', '\x2', '>', '?', '\x3', '\x2', '\x2', '\x2', 
		'?', '\x41', '\x3', '\x2', '\x2', '\x2', '@', '\x42', '\t', '\x3', '\x2', 
		'\x2', '\x41', '@', '\x3', '\x2', '\x2', '\x2', '\x42', '\x43', '\x3', 
		'\x2', '\x2', '\x2', '\x43', '\x41', '\x3', '\x2', '\x2', '\x2', '\x43', 
		'\x44', '\x3', '\x2', '\x2', '\x2', '\x44', '\x45', '\x3', '\x2', '\x2', 
		'\x2', '\x45', 'G', '\a', '\x30', '\x2', '\x2', '\x46', 'H', '\t', '\x3', 
		'\x2', '\x2', 'G', '\x46', '\x3', '\x2', '\x2', '\x2', 'H', 'I', '\x3', 
		'\x2', '\x2', '\x2', 'I', 'G', '\x3', '\x2', '\x2', '\x2', 'I', 'J', '\x3', 
		'\x2', '\x2', '\x2', 'J', '\xE', '\x3', '\x2', '\x2', '\x2', 'K', 'M', 
		'\t', '\x3', '\x2', '\x2', 'L', 'K', '\x3', '\x2', '\x2', '\x2', 'M', 
		'N', '\x3', '\x2', '\x2', '\x2', 'N', 'L', '\x3', '\x2', '\x2', '\x2', 
		'N', 'O', '\x3', '\x2', '\x2', '\x2', 'O', 'P', '\x3', '\x2', '\x2', '\x2', 
		'P', 'R', '\a', '\x30', '\x2', '\x2', 'Q', 'S', '\t', '\x3', '\x2', '\x2', 
		'R', 'Q', '\x3', '\x2', '\x2', '\x2', 'S', 'T', '\x3', '\x2', '\x2', '\x2', 
		'T', 'R', '\x3', '\x2', '\x2', '\x2', 'T', 'U', '\x3', '\x2', '\x2', '\x2', 
		'U', 'V', '\x3', '\x2', '\x2', '\x2', 'V', 'X', '\a', '\x30', '\x2', '\x2', 
		'W', 'Y', '\t', '\x3', '\x2', '\x2', 'X', 'W', '\x3', '\x2', '\x2', '\x2', 
		'Y', 'Z', '\x3', '\x2', '\x2', '\x2', 'Z', 'X', '\x3', '\x2', '\x2', '\x2', 
		'Z', '[', '\x3', '\x2', '\x2', '\x2', '[', '\x10', '\x3', '\x2', '\x2', 
		'\x2', '\\', '\x62', '\x5', '\x19', '\r', '\x2', ']', '\x61', '\n', '\x4', 
		'\x2', '\x2', '^', '_', '\a', '^', '\x2', '\x2', '_', '\x61', '\t', '\x4', 
		'\x2', '\x2', '`', ']', '\x3', '\x2', '\x2', '\x2', '`', '^', '\x3', '\x2', 
		'\x2', '\x2', '\x61', '\x64', '\x3', '\x2', '\x2', '\x2', '\x62', '`', 
		'\x3', '\x2', '\x2', '\x2', '\x62', '\x63', '\x3', '\x2', '\x2', '\x2', 
		'\x63', '\x65', '\x3', '\x2', '\x2', '\x2', '\x64', '\x62', '\x3', '\x2', 
		'\x2', '\x2', '\x65', '\x66', '\x5', '\x19', '\r', '\x2', '\x66', '\x12', 
		'\x3', '\x2', '\x2', '\x2', 'g', 'k', '\t', '\x5', '\x2', '\x2', 'h', 
		'j', '\t', '\x6', '\x2', '\x2', 'i', 'h', '\x3', '\x2', '\x2', '\x2', 
		'j', 'm', '\x3', '\x2', '\x2', '\x2', 'k', 'i', '\x3', '\x2', '\x2', '\x2', 
		'k', 'l', '\x3', '\x2', '\x2', '\x2', 'l', '\x14', '\x3', '\x2', '\x2', 
		'\x2', 'm', 'k', '\x3', '\x2', '\x2', '\x2', 'n', 'p', '\t', '\a', '\x2', 
		'\x2', 'o', 'n', '\x3', '\x2', '\x2', '\x2', 'p', 'q', '\x3', '\x2', '\x2', 
		'\x2', 'q', 'o', '\x3', '\x2', '\x2', '\x2', 'q', 'r', '\x3', '\x2', '\x2', 
		'\x2', 'r', 's', '\x3', '\x2', '\x2', '\x2', 's', 't', '\b', '\v', '\x2', 
		'\x2', 't', '\x16', '\x3', '\x2', '\x2', '\x2', 'u', 'y', '\a', '%', '\x2', 
		'\x2', 'v', 'x', '\n', '\b', '\x2', '\x2', 'w', 'v', '\x3', '\x2', '\x2', 
		'\x2', 'x', '{', '\x3', '\x2', '\x2', '\x2', 'y', 'w', '\x3', '\x2', '\x2', 
		'\x2', 'y', 'z', '\x3', '\x2', '\x2', '\x2', 'z', '|', '\x3', '\x2', '\x2', 
		'\x2', '{', 'y', '\x3', '\x2', '\x2', '\x2', '|', '}', '\b', '\f', '\x3', 
		'\x2', '}', '\x18', '\x3', '\x2', '\x2', '\x2', '~', '\x7F', '\a', '$', 
		'\x2', '\x2', '\x7F', '\x1A', '\x3', '\x2', '\x2', '\x2', '\x80', '\x81', 
		'\a', '/', '\x2', '\x2', '\x81', '\x1C', '\x3', '\x2', '\x2', '\x2', '\x13', 
		'\x2', '%', ',', '\x31', '\x34', '\x39', '>', '\x43', 'I', 'N', 'T', 'Z', 
		'`', '\x62', 'k', 'q', 'y', '\x4', '\b', '\x2', '\x2', '\x2', '\x3', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace Stellaris.Data.Antlr4
